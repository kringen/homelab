# /etc/haproxy/haproxy.cfg


#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    log         /dev/log local1 notice
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          20s
    timeout server          20s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /
    stats show-node
    stats show-desc Stats for reverse proxy
    stats auth {{ lookup('password', '/dev/null length=6 chars=ascii_letters') }}:{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}

{% for service in proxy_services_frontend %}
{{ service.service_comment }}
frontend {{ service.service_name }}
  bind *:{{ service.service_port }}
  mode {{ service.service_protocol }}
  {% for option in service.service_options %}
  option {{ option }}
  {% endfor %}
  default_backend {{ service.service_backend }}
{% endfor %}

{% for service in proxy_services_backend %}
{{ service.service_comment }}
backend {{ service.service_name }}
  {% for option in service.service_options %}
  option {{ option }}
  {% endfor %}
  http-check expect status 200
  balance {{ service.balance }}
  {% for host in service.backend_hosts %}
  server {{ service.service_name }}-{{loop.index}} {{ host }}:{{ service.backend_port }} check
  {% endfor %}
{% endfor %}
